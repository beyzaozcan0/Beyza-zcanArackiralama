Projeyi çalıştırmadan önce aşağıdaki adımları takip etmeniz gerekmektedir:

appsettings.json Dosyasını Düzenleme
Projenin appsettings.json dosyasına gidin ve ConnectionStrings bölümündeki baglan değerini kendi MSSQL bağlantı bilgilerinizle doldurun:

"ConnectionStrings": {
    "baglan": "Server=YOUR_SERVER;Database=YOUR_DATABASE;User Id=YOUR_USERNAME;Password=YOUR_PASSWORD;"
}
Migration Oluşturma ve Veritabanını Güncelleme

Visual Studio’da üst menüden View (Görünüm) > Other Windows (Diğer Pencereler) > Package Manager Console (Paket Yöneticisi Konsolu) seçeneğini tıklayın.
Açılan konsol ekranına aşağıdaki komutu yazın ve Enter tuşuna basın:
add-migration mig1
Bu işlem tamamlandığında bir migration dosyası oluşturulacaktır.
Aynı konsol ekranına bu sefer aşağıdaki komutu yazın ve Enter tuşuna basın:

update-database
Bu işlem veritabanınızı güncelleyecek. İşlem biraz zaman alabilir, sabırlı olun.
Projenin Çalıştırılması
Projeyi çalıştırdığınızda, sizi doğrudan bir Login ekranı karşılayacaktır.

Admin olarak giriş yapmak için aşağıdaki bilgileri kullanabilirsiniz:
Kullanıcı Adı: beyza@beyza.com
Şifre: Admin.!

-Ajax İşlemleri
-Araba Marka Ekleme Silme Güncelleme
-Araba Listeleme Silme Ekleme Güncelme
-Kullanıcı Araba Kiralama İşlemleri 

-SignalR
-SignalR şu şekilde çalışıyor, oturum açmış kullanıcı profilim kısmından yetkili ile konuşabliriyorum istersen şöyle yapabilirsin. Bir tane kullancı hesabını chormda(sana kalmış) aç birde linki kopyala opera (sana kalmış) burada yapıştır 
ve admin olarak hesaba giriş yap Mesajlar bölümünde anlık olarak gelen mesajları görebilirsin oradan cevap verirsen kullanıcıyada direk düşer.

-İdentity İle işlemler yapıldı

aşşağıda belirtliğim zorunluklar var bunları karılaşlamlı ona göre şifre yaz 
builder.Services.AddIdentity<AppUser, AppRole>(opt =>
{
    opt.Password.RequireDigit = true; //Parolanın en az bir rakam (digit) içermesi gerektiğini belirtir.
    opt.Password.RequireLowercase = true;  // Parolanın en az bir küçük harf içermesi gerektiğini belirtir
    opt.Password.RequireUppercase = true; // Parolanın en az bir büyük harf içermesi gerektiğini belirtir. 
    opt.Password.RequireNonAlphanumeric = true;//Parolanın en az bir alfasayısal olmayan karakter içermesi gerektiğini belirtir.
    opt.Password.RequiredLength = 6; // Parolanın minimum uzunluğunu belirler. 
    opt.User.RequireUniqueEmail = true; //Kullanıcıların benzersiz bir e-posta adresine sahip olmalarını sağlar.
}).AddEntityFrameworkStores<AppDbContext>().AddDefaultTokenProviders();